{"lein-iplant-cmdtar"
 {:type     :lein-plugin
  :path     "lein-plugins/lein-iplant-cmdtar"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "clj-cas"
 {:type     :library
  :type-num 7
  :path     "libs/clj-cas"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "clj-icat-direct"
 {:type     :library
  :type-num 9
  :path     "libs/clj-icat-direct"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "clj-jargon"
 {:type     :library
  :type-num 8
  :path     "libs/clj-jargon"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "heuristomancer"
 {:type     :library
  :type-num 12
  :path     "libs/heuristomancer"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "service-logging"
 {:type     :library
  :type-num 4
  :path     "libs/service-logging"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "iplant-clojure-commons"
 {:type     :library
  :type-num 5
  :path     "libs/iplant-clojure-commons"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "common-cli"
 {:type     :library
  :type-num 13
  :path     "libs/common-cli"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "common-cfg"
 {:type     :library
  :type-num 14
  :path     "libs/common-cfg"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive  false}

 "common-swagger-api"
 {:type     :library
  :type-num 15
  :path     "libs/common-swagger-api"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "kameleon"
 {:type     :library
  :type-num 6
  :path     "libs/kameleon"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "authy"
 {:type     :library
  :type-num 10
  :path     "libs/authy"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "mescal"
 {:type     :library
  :type-num 11
  :path     "libs/mescal"
  :build    :lein
  :install  :lein
  :tarball? false
  :uberjar? false
  :install? true
  :language :clojure
  :archive? false}

 "clockwork"
 {:type     :service
  :path     "services/clockwork"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "dewey"
 {:type     :service
  :path     "services/dewey"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "Donkey"
 {:type     :service
  :path     "services/Donkey"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "Infosquito"
 {:type     :service
  :path     "services/Infosquito"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "monkey"
 {:type     :service
  :path     "services/monkey"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}


 "iplant-email"
 {:type     :service
  :path     "services/iplant-email"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "iplant-groups"
 {:type     :service
  :path     "services/iplant-groups"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "JEX"
 {:type     :service
  :path     "services/JEX"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "kifshare"
 {:type     :service
  :path     "services/kifshare"
  :build    :kifshare
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "metadactyl-clj"
 {:type     :service
  :path     "services/metadactyl-clj"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "NotificationAgent"
 {:type     :service
  :path     "services/NotificationAgent"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "anon-files"
 {:type     :service
  :path     "services/anon-files"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "user-sessions"
 {:type     :service
  :path     "services/user-sessions"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "user-preferences"
 {:type     :service
  :path     "services/user-preferences"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "saved-searches"
 {:type     :service
  :path     "services/saved-searches"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "tree-urls"
 {:type     :service
  :path     "services/tree-urls"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "facepalm"
 {:type     :tool
  :path     "tools/facepalm"
  :build    :lein
  :tarball? true
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

 "filetool"
 {:type     :tool
  :path     "tools/filetool"
  :build    :lein
  :tarball? false
  :uberjar? true
  :install? false
  :language :clojure
  :archive? true}

  "de-database-schema"
 {:type     :database
  :path     "databases/de-database-schema"
  :build    :shell
  :tarball? false
  :uberjar? false
  :install? false
  :language :sql
  :archive? true}

 "notification-db"
 {:type     :database
  :path     "databases/notification-db"
  :build    :shell
  :tarball? false
  :uberjar? false
  :install? false
  :language :sql
  :archive? true}

 "metadata-db"
 {:type     :database
  :path     "databases/metadata"
  :build    :shell
  :tarball? false
  :uberjar? false
  :install? false
  :language :sql
  :archive? true}

 "jex-db"
 {:type     :database
  :path     "databases/jex-db"
  :build    :shell
  :tarball? false
  :uberjar? false
  :install? false
  :language :sql
  :archive? true}

  "data-info"
  {:type     :service
   :path     "services/data-info"
   :build    :lein
   :tarball? false
   :uberjar? true
   :install? false
   :language :clojure
   :archive? true}

  "info-typer"
  {:type     :service
   :path     "services/info-typer"
   :build    :lein
   :tarball? false
   :uberjar? true
   :install? false
   :language :clojure
   :archive? true}

  "metadata"
  {:type     :service
   :path     "services/metadata"
   :build    :lein
   :tarball? false
   :uberjar? true
   :install? false
   :language :clojure
   :archive? true}}
